{
  "storage": [
    {
      "astId": 398,
      "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
      "label": "_owner",
      "offset": 0,
      "slot": "0",
      "type": "t_address"
    },
    {
      "astId": 62,
      "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
      "label": "storedHashInputs",
      "offset": 0,
      "slot": "1",
      "type": "t_struct(HashInputs)15_storage"
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_struct(HashInputs)15_storage": {
      "encoding": "inplace",
      "label": "struct HashInputs",
      "members": [
        {
          "astId": 6,
          "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
          "label": "msgSender",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 8,
          "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
          "label": "txOrigin",
          "offset": 0,
          "slot": "1",
          "type": "t_address"
        },
        {
          "astId": 10,
          "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
          "label": "blockTimestamp",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 12,
          "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
          "label": "txGasPrice",
          "offset": 0,
          "slot": "3",
          "type": "t_uint256"
        },
        {
          "astId": 14,
          "contract": "MockSolidityDiceGameExploit.sol:MockSolidityDiceGameExploit",
          "label": "blockHash",
          "offset": 0,
          "slot": "4",
          "type": "t_bytes32"
        }
      ],
      "numberOfBytes": "160"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    }
  }
}